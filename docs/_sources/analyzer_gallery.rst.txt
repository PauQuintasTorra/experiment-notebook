Analyzer gallery
----------------

All figures are produced by the code example in the
`templates/analysis_gallery_example/generate_gallery.py <https://github.com/miguelinux314/experiment-notebook/blob/master/templates/analysis_gallery_example/generate_gallery.py>`_ script.

Please refer to the :doc:`api` or the `source code <https://github.com/miguelinux314/experiment-notebook>`_
for full details on all Analyzer subclasses.

.. note::
  The Iris flower dataset CSV is directly used even though it was not created with the enb library.

Scalar data analysis
********************

The :class:`enb.aanalysis.ScalarDistributionAnalyzer` class produces one or more histograms, stacked along the y axis.

The following example shows the distribution of sepal lengths by Iris class:

.. image:: https://github.com/miguelinux314/experiment-notebook/raw/master/templates/analysis_gallery_example/png_plots/groupby_class/ScalarDistributionAnalyzer/distribution_sepal_length.png

**Interesting parameters** to the `analyze_df()` method:

* `group_by`: useful to stack more than one histogram, by dividing the data frame based on the value of a column.
  `group_by="class"` was used to generate the image above.

* `show_global`: controls wether results for the whole dataset (not split by group_by) is to be shown along the
  subgroups.

* `adjust_height`: if True, the histograms are all scaled so that the maximum relative frequency reaches the top
  of its plot. If False, histograms are not scaled.


Multiple column analysis
************************

The :class:`enb.aanalysis.ScalarDistributionAnalyzer` class produces a single scatter plot given two target
columns as an input.

The following example shows the distribution of two columns of the set.

.. image:: https://github.com/miguelinux314/experiment-notebook/raw/master/templates/analysis_gallery_example/png_plots/groupby_class/TwoColumnScatterAnalyzer/twocolumns_scatter_sepal_length_VS_petal_width.png

**Interesting parameters** to the `analyze_df()` method:

* `group_by`: It allows differenciating data points based on the value of the given column.
  Different colors and markers are automatically and consistently used.

* `show_individual`: When True, all data points are shown. When False, only the average values
  of each class is shown.
